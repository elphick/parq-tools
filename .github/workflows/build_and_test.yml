name: "Run Tests with Poetry"

permissions:
  contents: write

on:
  push:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          pip install poetry==1.5.0

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        #        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --all-extras --no-interaction

      - name: Test with pytest
        run: |
          poetry run pytest

  coverage-badge:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install Poetry
        run: pip install poetry==1.5.0
      - name: Install dependencies
        run: poetry install --all-extras --no-interaction
      - name: Generate coverage report
        run: |
          poetry run pip install coverage
          poetry run coverage run -m pytest
          poetry run coverage xml
      - name: Generate coverage badge
        uses: tj-actions/coverage-badge-py@v2
        with:
          output: badges/coverage.svg
      - name: Upload coverage badge
        uses: actions/upload-artifact@v4
        with:
          name: coverage-badge
          path: docs/source/_static/badges/coverage.svg
      - name: Commit and push coverage badge
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/source/_static/badges/coverage.svg
          git commit -m "Update coverage badge [skip ci]" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          path: badges/coverage.svg
